generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

// datasource db {
//   provider  = "postgresql"
//   url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
// }

model Realm {
  id      Int                @id @unique
  name    NameLocalization[] @relation("RealmNameLocalization")
  region  String
  slug    String
  players Player[]
  guilds  Guild[]
}

model NameLocalization {
  id         Int    @id @default(autoincrement())
  entityId   Int
  entityType String
  locale     String
  name       String

  realm   Realm? @relation("RealmNameLocalization", fields: [realmId], references: [id])
  realmId Int?
  item    Item?  @relation("ItemNameLocalization", fields: [itemId], references: [id])
  itemId  Int?

  @@unique([entityId, entityType, locale])
}

model Guild {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  realm    Realm    @relation(fields: [serverId], references: [id])
  serverId Int
  players  Player[]
}

enum Gender {
  MALE
  FEMALE
}

model Player {
  id       Int           @id @default(autoincrement())
  name     String
  gender   Gender
  realm    Realm         @relation(fields: [serverId], references: [id])
  serverId Int
  guild    Guild         @relation(fields: [guildId], references: [id])
  guildId  Int
  loots    ItemsOwners[]
  epgp     Epgp?

  @@unique([name, serverId, guildId])
}

model Item {
  id                   Int                    @id @unique
  quality              String
  iconUrl              String
  drops                ItemsOwners[]
  variants             ItemVariant[]
  names                NameLocalization[]     @relation("ItemNameLocalization")
  ItemNameLocalisation ItemNameLocalisation[]
}

model ItemNameLocalisation {
  id     Int    @id @default(autoincrement())
  locale String @unique
  name   String
  item   Item   @relation(fields: [itemId], references: [id])
  itemId Int
}

model ItemVariant {
  id         Int    @id @default(autoincrement())
  parentItem Item   @relation(fields: [itemId], references: [id])
  itemId     Int
  itemString String @unique
}

model ItemsOwners {
  item       Item     @relation(fields: [itemId], references: [id])
  itemId     Int
  player     Player   @relation(fields: [playerId], references: [id])
  playerId   Int
  assignedAt DateTime
  gpCost     Int

  @@id([playerId, itemId, assignedAt])
}

model Epgp {
  id        Int      @id @default(autoincrement())
  player    Player   @relation(fields: [playerId], references: [id])
  playerId  Int      @unique
  ep        Int
  gp        Int
  updatedAt DateTime
}
